@using TaskManager.Models
@{
    ViewData["Title"] = "Tasks";
}


<h2 class="text-center">Tasks</h2>
<br />



<div class="container" >
    @(Html.DevExtreme().TreeList<TaskItem>()
                                     .ID("taskTree")
                                     .DataSource(ds => ds.Mvc()
                                     .Controller("Tasks")
                                     .LoadAction("Get")
                                     .InsertAction("InsertTask")
                                     .UpdateAction("UpdateTask")
                                     .DeleteAction("DeleteTask")
                                     .Key("Id")
                                     )
                                     .KeyExpr("Id")
                                     .ParentIdExpr("ParentTaskId")
                                     .ShowRowLines(true)
                                     .Editing(e => e
                                                   .Mode(GridEditMode.Popup)
                                                   .AllowUpdating(true)
                                                   .AllowDeleting(true)
                                                   .AllowAdding(true)
                                                   .Popup(p => p
                                                       .Title("Task info")
                                                           .ShowTitle(true)
                                                           .Width(700)
                                                           .Height(340)
                                                           .Position(pos => pos
                                                               .My(HorizontalAlignment.Center, VerticalAlignment.Top)
                                                               .At(HorizontalAlignment.Center, VerticalAlignment.Top)
                                                               .Of(new JS("window"))
                                                           )
                                                       )
                                                   )
                                     .ColumnAutoWidth(true)
                                     .Columns(col =>
                                     {
                                         col.AddFor(x => x.Title);
                                        col.AddFor(x => x.Description).MinWidth(250);
                                         col.AddFor(x => x.UserId)
                                                                .Lookup(lookup => lookup
                                                                .DataSource(ds => ds.Mvc().Controller("Users").LoadAction("GetUsers").Key("Id"))
                                                                .ValueExpr("Id").DisplayExpr("FullName").AllowClearing(true));
                                         col.AddFor(x => x.DateStart).DataType(GridColumnDataType.DateTime);
                                         col.AddFor(x => x.DateEnd).DataType(GridColumnDataType.DateTime);
                                         col.AddFor(x => x.TaskStatusId)
                                                                      .Lookup(lookup => lookup
                                                                      .DataSource(ds => ds.Mvc().Controller("Tasks").LoadAction("GetStatuses").Key("Id"))
                                                                      .ValueExpr("Id").DisplayExpr("Name"));

                                     })
    )
</div>
<script>
    function treeList_onCellPrepared(e) {


    }
</script>
